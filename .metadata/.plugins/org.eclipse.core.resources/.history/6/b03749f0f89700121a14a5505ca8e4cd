//=======================================================================
//  ClassName : LiplisWidgetTwitterRegist
//  概要      : ツイッターの登録画面
//
//	extends   : Activity
//	impliments:
//
//	レイアウトファイル : twitterconfiguration.xml
//
//  プリファレンスには変換値ではなく、設定値をのものを入力する!
//
//2013/03/27 ver3.3.6 Twitter対応
//
//  LiplisAndroidシステム
//  Copyright(c) 2011-2013 sachin. All Rights Reserved.
//=======================================================================
package little.cute.Activity;

import twitter4j.Twitter;
import twitter4j.TwitterException;
import twitter4j.TwitterFactory;
import twitter4j.auth.AccessToken;
import twitter4j.auth.RequestToken;
import little.cute.R;
import little.cute.Common.LiplisDefine;
import android.app.Activity;
import android.content.Intent;
import android.content.SharedPreferences;
import android.net.Uri;
import android.os.Bundle;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;

public class LiplisWidgetTwitterRegist  extends Activity {

	 //このファクトリインスタンスは再利用可能でスレッドセーフです
	 private Twitter twitter;
	 private RequestToken requestToken;
	 private AccessToken accessToken;

	 //トークンとシークレットトークん
	 private String token;
	 private String secret;

    /// <summary>
    /// onCreate
    /// 作成時処理
    /// </summary>
    @Override
    public void onCreate(Bundle savedInstanceState) {
    	//親クラスの
        super.onCreate(savedInstanceState);

        //レイアウトのセット
        setContentView(R.layout.twitterregister);

        //クローズボタンの設定
        setCloseButton();

        //ツイッター登録ボタン
        setStartTwitterUrlButton();

        //ピンコードの登録ボタン
        setPinCodeButton();

        //値の取得
        getPriference();

        //ツイッターオブジェクトの初期化
        initTwitterObject();
    }

    ///====================================================================
    ///
    ///                               初期化
    ///
    ///====================================================================

    /// <summary>
    /// initTwitterObject
    /// ツイッターオブジェクトの初期化
    /// </summary>
    private void initTwitterObject()
    {
   	 	// このファクトリインスタンスは再利用可能でスレッドセーフです
	    twitter = TwitterFactory.getSingleton();

	    //アプリケーションキーを設定する
	    twitter.setOAuthConsumer(LiplisDefine.TWITTER_OAUTH_CONSUMERKEY, LiplisDefine.TWITTER_OAUTH_CONSUMERSECRET);

	    //リクエストトークンを作成する
	    try {
			requestToken = twitter.getOAuthRequestToken();
		} catch (TwitterException e) {
			// TODO 自動生成された catch ブロック
			e.printStackTrace();
		}

	  //アクセストークンを作成する
	    accessToken = new AccessToken(token,secret);
    }

    /// <summary>
    /// setCloseButton
    /// クローズボタンのハンドらセット
    /// </summary>
    private void setCloseButton()
    {
        //ボタンの配置
        Button closeButton = (Button) findViewById(R.id.btnTwitterRegistClose);

        //クリックリスナーの作成
        closeButton.setOnClickListener(new OnClickListener() {
		  	//クリックイベント
			public void onClick(View v) {
				finish();
		    }
		});
    }

    /// <summary>
    /// setTwitterPassCodeButton
    /// ツイッター登録ボタンのハンドらセット
    /// </summary>
    private void setStartTwitterUrlButton()
    {
        //ボタンの配置
        Button button = (Button) findViewById(R.id.btnStartTwitterUrl);

        //クリックリスナーの作成
        button.setOnClickListener(new OnClickListener() {
		  	//クリックイベント
			public void onClick(View v) {
				twitterRegister();
		    }
		});
    }

    /// <summary>
    /// setStartTwitteButton
    /// ピンコード登録ボタンのハンドらセット
    /// </summary>
    private void setPinCodeButton()
    {
        //ボタンの配置
        Button button = (Button) findViewById(R.id.btnInputPinCode);

        //クリックリスナーの作成
        button.setOnClickListener(new OnClickListener() {
		  	//クリックイベント
			public void onClick(View v) {
				inputPinCode(getInputPinCode());
		    }
		});
    }


    ///====================================================================
    ///
    ///                               初期化
    ///
    ///====================================================================

    /// <summary>
    /// onDestroy
    /// 終了時処理
    /// </summary>
    @Override
    public void onDestroy()
	{
		 twitter.shutdown();
		 requestToken = null;
		 accessToken = null;
	}

    ///====================================================================
    ///
    ///                         プリファレンス
    ///
    ///====================================================================

    private void setPriference()
    {
        //プリファレンスの取得
        final SharedPreferences config = getSharedPreferences(LiplisDefine.PREFS_NAME, MODE_WORLD_WRITEABLE);

        //プリファレンスの呼び出し
        SharedPreferences.Editor configEditor = config.edit();

        //今回設定した値をプリファレンスにプット
        configEditor.putString(LiplisDefine.PREFS_TWITTER_TOKEN		, accessToken.getToken());
        configEditor.putString(LiplisDefine.PREFS_TWITTER_SECRET	, secret);


        //変更をコミット
        configEditor.commit();
    }

    private void getPriference()
    {
        //プリファレンスの取得
        final SharedPreferences config = getSharedPreferences(LiplisDefine.PREFS_NAME, MODE_WORLD_WRITEABLE);

        //トークンとシークレット取得
	   	token = config.getString(LiplisDefine.PREFS_TWITTER_TOKEN , "");
	   	secret = config.getString(LiplisDefine.PREFS_TWITTER_SECRET , "");

    }


    ///====================================================================
    ///
    ///                         ツイッター認証
    ///
    ///====================================================================

    /// <summary>
    /// twitterRegister
    /// ツイッター登録
    /// </summary>
    private void twitterRegister()
    {
	    //アクセストークンが取得できなければ、ピンコード入力を要請する
	    if(accessToken.getToken().equals(""))
	    {
	    	//アクセストークンのリセット
	    	accessToken = null;

	    	//リクエストトークンURLを取得し、ブラウザを起動する
	    	Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse(requestToken.getAuthorizationURL()));
	    	startActivity(intent);
	    }
    }

    /// <summary>
    /// inputPinCode
    /// ピンコードをツイッターオブジェクトに入力する
    /// </summary>
    private void inputPinCode(String pin)
    {
		try{
			if(pin.length() > 0){
				accessToken = twitter.getOAuthAccessToken(requestToken, pin);
				viewResult("ツイッター認証に成功しました");
				setPriference();
			}else{
				viewResult("ピンコードを入力してください。");
			}

		} catch (TwitterException te) {
			viewResult("ツイッター認証に失敗しました。");
		}
    }

    /// <summary>
    /// getInputPinCode
    /// 入力ピンコードを取得する
    /// </summary>
    private String getInputPinCode()
    {
    	EditText editText = (EditText) findViewById(R.id.edPinCode);
    	return editText.getText().toString();
    }

    /// <summary>
    /// viewResult
    /// 結果を表示する
    /// </summary>
    private void viewResult(String msg)
    {
    	// 第3引数は、表示期間（LENGTH_SHORT、または、LENGTH_LONG）
        Toast.makeText(this, msg, Toast.LENGTH_SHORT).show();
    }

}
